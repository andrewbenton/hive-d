/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
module hive.thrift.TCLIService;

import thrift.base;
import thrift.codegen.base;
import thrift.util.hashset;

import hive.thrift.TCLIService_types;

interface TCLIService {
  TOpenSessionResp OpenSession(ref const(TOpenSessionReq) req);
  TCloseSessionResp CloseSession(ref const(TCloseSessionReq) req);
  TGetInfoResp GetInfo(ref const(TGetInfoReq) req);
  TExecuteStatementResp ExecuteStatement(ref const(TExecuteStatementReq) req);
  TGetTypeInfoResp GetTypeInfo(ref const(TGetTypeInfoReq) req);
  TGetCatalogsResp GetCatalogs(ref const(TGetCatalogsReq) req);
  TGetSchemasResp GetSchemas(ref const(TGetSchemasReq) req);
  TGetTablesResp GetTables(ref const(TGetTablesReq) req);
  TGetTableTypesResp GetTableTypes(ref const(TGetTableTypesReq) req);
  TGetColumnsResp GetColumns(ref const(TGetColumnsReq) req);
  TGetFunctionsResp GetFunctions(ref const(TGetFunctionsReq) req);
  TGetPrimaryKeysResp GetPrimaryKeys(ref const(TGetPrimaryKeysReq) req);
  TGetCrossReferenceResp GetCrossReference(ref const(TGetCrossReferenceReq) req);
  TGetOperationStatusResp GetOperationStatus(ref const(TGetOperationStatusReq) req);
  TCancelOperationResp CancelOperation(ref const(TCancelOperationReq) req);
  TCloseOperationResp CloseOperation(ref const(TCloseOperationReq) req);
  TGetResultSetMetadataResp GetResultSetMetadata(ref const(TGetResultSetMetadataReq) req);
  TFetchResultsResp FetchResults(ref const(TFetchResultsReq) req);
  TGetDelegationTokenResp GetDelegationToken(ref const(TGetDelegationTokenReq) req);
  TCancelDelegationTokenResp CancelDelegationToken(ref const(TCancelDelegationTokenReq) req);
  TRenewDelegationTokenResp RenewDelegationToken(ref const(TRenewDelegationTokenReq) req);

  enum methodMeta = [
    TMethodMeta(`OpenSession`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`CloseSession`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetInfo`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`ExecuteStatement`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetTypeInfo`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetCatalogs`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetSchemas`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetTables`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetTableTypes`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetColumns`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetFunctions`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetPrimaryKeys`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetCrossReference`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetOperationStatus`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`CancelOperation`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`CloseOperation`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetResultSetMetadata`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`FetchResults`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`GetDelegationToken`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`CancelDelegationToken`,
      [TParamMeta(`req`, 1)]
    ),
    TMethodMeta(`RenewDelegationToken`,
      [TParamMeta(`req`, 1)]
    )
  ];
}
